using IdentityModel;
using IdentityServer4.Models;
using Newtonsoft.Json;
using SM.Sso.Server.Api.Model;
using System.Collections.Generic;
using System.Security.Claims;

namespace SM.Sso.Server.Api
{
    public class Config
    {

        public static List<User> GetUsers()
        {

            return new List<User>
            {
                new User
                {
                    SubjectId = "1",
                    Username = "administrator",
                    Password = "123456",
                    Claims = ClaimsForAdmin()
                },
            };

        }

        public static List<Claim> ClaimsForAssinante(int assinateId, string name, string email)
        {

            var tools = new List<dynamic>
            {
                 
             
            };

            var _toolsForSubscriber = JsonConvert.SerializeObject(tools);

            return new List<Claim>
            {
                new Claim(JwtClaimTypes.Name, name),
                new Claim(JwtClaimTypes.Email, email),
                new Claim("tools",_toolsForSubscriber),
                new Claim("role","subscriber"),
            };
        }

        public static List<Claim> ClaimsForAdmin()
        {

            var tools = new List<dynamic>
            {
               <#claimsforadmin#>
            };

            var _toolsForAdmin = JsonConvert.SerializeObject(tools);

            return new List<Claim>
            {
                new Claim("name", "Administrator"),
                new Claim("tools",_toolsForAdmin ),
                new Claim("role","admin"),
            };
        }

        public static IEnumerable<Scope> GetScopes()
        {
            return new List<Scope>()
            {
                StandardScopes.OpenId,
                StandardScopes.Profile,
                new Scope
                {
                    Claims = new List<ScopeClaim> {
                        new ScopeClaim("subscriberId"),
                        new ScopeClaim("role"),
                        new ScopeClaim("tools"),
                    },
                    Type = ScopeType.Resource,
                    Name = "ssosm",
                    Description = "sso basic",
                    IncludeAllClaimsForUser = true
                }
            };
        }


        public static IEnumerable<Client> GetClients()
        {
            var key = "secret".Sha256();
            return new List<Client>
            {
                new Client
                {
                    ClientId = "Client Name",

                    // no interactive user, use the clientid/secret for authentication
                    AllowedGrantTypes = GrantTypes.ResourceOwnerPassword,
                    // secret for authentication
                    ClientSecrets =
                    {
                        new Secret(key)
                    },

                    // scopes that client has access to


                    AllowedScopes = {
                        StandardScopes.OpenId.Name,
                        StandardScopes.Profile.Name,
                        "ssosm"
                    }
                }
            };

        }

    }
}